{"ast":null,"code":"var _jsxFileName = \"/Users/Spencer/Documents/code/absoluteV2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst superagent = require('superagent');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: []\n    };\n  }\n\n  componentDidMount() {\n    superagent.get('http://localhost:4000/api/v1/StarterCharacters').then(results => {\n      this.setState({\n        characters: results.body.playable\n      });\n    });\n  }\n\n  render() {\n    let statList = ['Health', 'Attack', 'Magic', 'Speed', 'Luck', 'Defence', 'Resistance'];\n    return React.createElement(React.Fragment, null, this.state.characters.map((char, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, char.name), ' ', React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, char.starting - stats.map((stat, key) => {\n        return React.createElement(\"span\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, statList[key], \": \", stat, \",\", ' ');\n      })));\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/Spencer/Documents/code/absoluteV2/src/index.js"],"names":["React","ReactDOM","superagent","require","App","Component","constructor","props","state","characters","componentDidMount","get","then","results","setState","body","playable","render","statList","map","char","index","name","starting","stats","stat","key","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,UAAU,CACPS,GADH,CACO,gDADP,EAEGC,IAFH,CAEQC,OAAO,IAAI;AACf,WAAKC,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEI,OAAO,CAACE,IAAR,CAAaC;AAA3B,OAAd;AACD,KAJH;AAKD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,CACb,QADa,EAEb,QAFa,EAGb,OAHa,EAIb,OAJa,EAKb,MALa,EAMb,SANa,EAOb,YAPa,CAAf;AASA,WACE,0CACG,KAAKV,KAAL,CAAWC,UAAX,CAAsBU,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,IAAV,CADF,EACuB,GADvB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IAAI,CAACG,QAAL,GACCC,KAAK,CAACL,GAAN,CAAU,CAACM,IAAD,EAAOC,GAAP,KAAe;AACvB,eACE;AAAM,UAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGR,QAAQ,CAACQ,GAAD,CADX,QACoBD,IADpB,OAC2B,GAD3B,CADF;AAKD,OAND,CAFJ,CAFF,CADF;AAeD,KAhBA,CADH,CADF;AAqBD;;AA7C+B;;AAgDlC,MAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA5B,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBU,WAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst superagent = require('superagent');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: []\n    };\n  }\n  componentDidMount() {\n    superagent\n      .get('http://localhost:4000/api/v1/StarterCharacters')\n      .then(results => {\n        this.setState({ characters: results.body.playable });\n      });\n  }\n  render() {\n    let statList = [\n      'Health',\n      'Attack',\n      'Magic',\n      'Speed',\n      'Luck',\n      'Defence',\n      'Resistance'\n    ];\n    return (\n      <>\n        {this.state.characters.map((char, index) => {\n          return (\n            <div>\n              <h3>{char.name}</h3>{' '}\n              <p>\n                {char.starting -\n                  stats.map((stat, key) => {\n                    return (\n                      <span key={key}>\n                        {statList[key]}: {stat},{' '}\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}