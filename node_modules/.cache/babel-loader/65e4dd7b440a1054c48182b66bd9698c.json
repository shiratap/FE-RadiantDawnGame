{"ast":null,"code":"var _jsxFileName = \"/Users/Spencer/Documents/code/absoluteV2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst fight = require('./fight.js');\n\nconst superagent = require('superagent');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    superagent.get('http://localhost:4000/api/v1/StarterCharacters').then(results => {\n      this.setState({\n        characters: results.body\n      });\n    }).catch(e => alert(\"Couldn't retrieve data\"));\n    superagent.get('http://localhost:4000/api/v1/enemies').then(results => {\n      this.setState({\n        enemies: results.body\n      });\n    }).catch(e => alert(\"Couldn't retrieve data\"));\n  }\n\n  render() {\n    let statList = ['Health', 'Attack', 'Magic', 'Speed', 'Luck', 'Defence', 'Resistance', 'Experience'];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heroes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.characters && this.state.characters.map((char, index) => {\n      return React.createElement(\"div\", {\n        className: \"character\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, char.name), ' ', React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, Object.values(char.startingStats).map((stat, key) => {\n        return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, statList[key], \": \", stat, \",\", ' '));\n      })), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        key: index,\n        onClick: () => {\n          let newState = fight(index, this.state);\n          this.setState(newState);\n        },\n        className: \"btn btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Use to fight\"))));\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"enemies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.enemies && this.state.enemies.map((char, index) => {\n      return React.createElement(\"div\", {\n        className: \"character\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, char.name), ' ', React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, Object.values(char.startingStats).map((stat, key) => {\n        return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, statList[key], \": \", stat, \",\", ' '));\n      }))));\n    })));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/Spencer/Documents/code/absoluteV2/src/index.js"],"names":["React","ReactDOM","fight","require","superagent","App","Component","constructor","props","state","componentDidMount","get","then","results","setState","characters","body","catch","e","alert","enemies","render","statList","map","char","index","name","Object","values","startingStats","stat","key","newState","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst fight = require('./fight.js');\nconst superagent = require('superagent');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    superagent\n      .get('http://localhost:4000/api/v1/StarterCharacters')\n      .then(results => {\n        this.setState({ characters: results.body });\n      })\n      .catch(e => alert(\"Couldn't retrieve data\"));\n    superagent\n      .get('http://localhost:4000/api/v1/enemies')\n      .then(results => {\n        this.setState({ enemies: results.body });\n      })\n      .catch(e => alert(\"Couldn't retrieve data\"));\n  }\n\n  render() {\n    let statList = [\n      'Health',\n      'Attack',\n      'Magic',\n      'Speed',\n      'Luck',\n      'Defence',\n      'Resistance',\n      'Experience'\n    ];\n\n    return (\n      <div className=\"container\">\n        <div className=\"heroes\">\n          {this.state.characters &&\n            this.state.characters.map((char, index) => {\n              return (\n                <div className=\"character\">\n                  <h3>{char.name}</h3>{' '}\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      {Object.values(char.startingStats).map((stat, key) => {\n                        return (\n                          <>\n                            <span key={key}>\n                              {statList[key]}: {stat},{' '}\n                            </span>\n                          </>\n                        );\n                      })}\n                    </div>\n                    <div className=\"col-sm-3\">\n                      {/* {if(index === this.state.charcters.length - 1)} */}\n                      <button\n                        key={index}\n                        onClick={() => {\n                          let newState = fight(index, this.state);\n                          this.setState(newState);\n                        }}\n                        className=\"btn btn-dark\"\n                      >\n                        Use to fight\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n        <hr />\n        <div className=\"enemies\">\n          {this.state.enemies &&\n            this.state.enemies.map((char, index) => {\n              return (\n                <div className=\"character\">\n                  <h3>{char.name}</h3>{' '}\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      {Object.values(char.startingStats).map((stat, key) => {\n                        return (\n                          <>\n                            <span key={key}>\n                              {statList[key]}: {stat},{' '}\n                            </span>\n                          </>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}